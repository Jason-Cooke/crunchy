// Copyright 2017 The CrunchyCrypt Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_google_security_crunchy_jni_CrunchyCrypterBindings */

#ifndef _Included_com_google_security_crunchy_jni_CrunchyCrypterBindings
#define _Included_com_google_security_crunchy_jni_CrunchyCrypterBindings
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_google_security_crunchy_jni_CrunchyCrypterBindings
 * Method:    createCrunchyCrypterBindings
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_com_google_security_crunchy_jni_CrunchyCrypterBindings_createCrunchyCrypterBindings
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     com_google_security_crunchy_jni_CrunchyCrypterBindings
 * Method:    destroyCrunchyCrypterBindings
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_google_security_crunchy_jni_CrunchyCrypterBindings_destroyCrunchyCrypterBindings
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_google_security_crunchy_jni_CrunchyCrypterBindings
 * Method:    encrypt
 * Signature: (J[B)[B
 */
JNIEXPORT jbyteArray JNICALL Java_com_google_security_crunchy_jni_CrunchyCrypterBindings_encrypt__J_3B
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     com_google_security_crunchy_jni_CrunchyCrypterBindings
 * Method:    decrypt
 * Signature: (J[B)[B
 */
JNIEXPORT jbyteArray JNICALL Java_com_google_security_crunchy_jni_CrunchyCrypterBindings_decrypt__J_3B
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     com_google_security_crunchy_jni_CrunchyCrypterBindings
 * Method:    encrypt
 * Signature: (J[B[B)[B
 */
JNIEXPORT jbyteArray JNICALL Java_com_google_security_crunchy_jni_CrunchyCrypterBindings_encrypt__J_3B_3B
  (JNIEnv *, jclass, jlong, jbyteArray, jbyteArray);

/*
 * Class:     com_google_security_crunchy_jni_CrunchyCrypterBindings
 * Method:    decrypt
 * Signature: (J[B[B)[B
 */
JNIEXPORT jbyteArray JNICALL Java_com_google_security_crunchy_jni_CrunchyCrypterBindings_decrypt__J_3B_3B
  (JNIEnv *, jclass, jlong, jbyteArray, jbyteArray);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class com_google_security_crunchy_jni_CrunchyHybridDecrypterBindings */

#ifndef _Included_com_google_security_crunchy_jni_CrunchyHybridDecrypterBindings
#define _Included_com_google_security_crunchy_jni_CrunchyHybridDecrypterBindings
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_google_security_crunchy_jni_CrunchyHybridDecrypterBindings
 * Method:    createCrunchyHybridDecrypterBindings
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_com_google_security_crunchy_jni_CrunchyHybridDecrypterBindings_createCrunchyHybridDecrypterBindings
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     com_google_security_crunchy_jni_CrunchyHybridDecrypterBindings
 * Method:    destroyCrunchyHybridDecrypterBindings
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_google_security_crunchy_jni_CrunchyHybridDecrypterBindings_destroyCrunchyHybridDecrypterBindings
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_google_security_crunchy_jni_CrunchyHybridDecrypterBindings
 * Method:    decrypt
 * Signature: (J[B)[B
 */
JNIEXPORT jbyteArray JNICALL Java_com_google_security_crunchy_jni_CrunchyHybridDecrypterBindings_decrypt
  (JNIEnv *, jclass, jlong, jbyteArray);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class com_google_security_crunchy_jni_CrunchyHybridEncrypterBindings */

#ifndef _Included_com_google_security_crunchy_jni_CrunchyHybridEncrypterBindings
#define _Included_com_google_security_crunchy_jni_CrunchyHybridEncrypterBindings
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_google_security_crunchy_jni_CrunchyHybridEncrypterBindings
 * Method:    createCrunchyHybridEncrypterBindings
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_com_google_security_crunchy_jni_CrunchyHybridEncrypterBindings_createCrunchyHybridEncrypterBindings
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     com_google_security_crunchy_jni_CrunchyHybridEncrypterBindings
 * Method:    destroyCrunchyHybridEncrypterBindings
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_google_security_crunchy_jni_CrunchyHybridEncrypterBindings_destroyCrunchyHybridEncrypterBindings
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_google_security_crunchy_jni_CrunchyHybridEncrypterBindings
 * Method:    encrypt
 * Signature: (J[B)[B
 */
JNIEXPORT jbyteArray JNICALL Java_com_google_security_crunchy_jni_CrunchyHybridEncrypterBindings_encrypt
  (JNIEnv *, jclass, jlong, jbyteArray);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class com_google_security_crunchy_jni_CrunchyMacerBindings */

#ifndef _Included_com_google_security_crunchy_jni_CrunchyMacerBindings
#define _Included_com_google_security_crunchy_jni_CrunchyMacerBindings
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_google_security_crunchy_jni_CrunchyMacerBindings
 * Method:    createCrunchyMacerBindings
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_com_google_security_crunchy_jni_CrunchyMacerBindings_createCrunchyMacerBindings
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     com_google_security_crunchy_jni_CrunchyMacerBindings
 * Method:    destroyCrunchyMacerBindings
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_google_security_crunchy_jni_CrunchyMacerBindings_destroyCrunchyMacerBindings
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_google_security_crunchy_jni_CrunchyMacerBindings
 * Method:    sign
 * Signature: (J[B)[B
 */
JNIEXPORT jbyteArray JNICALL Java_com_google_security_crunchy_jni_CrunchyMacerBindings_sign
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     com_google_security_crunchy_jni_CrunchyMacerBindings
 * Method:    verify
 * Signature: (J[B[B)V
 */
JNIEXPORT void JNICALL Java_com_google_security_crunchy_jni_CrunchyMacerBindings_verify
  (JNIEnv *, jclass, jlong, jbyteArray, jbyteArray);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class com_google_security_crunchy_jni_CrunchySignerBindings */

#ifndef _Included_com_google_security_crunchy_jni_CrunchySignerBindings
#define _Included_com_google_security_crunchy_jni_CrunchySignerBindings
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_google_security_crunchy_jni_CrunchySignerBindings
 * Method:    createCrunchySignerBindings
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_com_google_security_crunchy_jni_CrunchySignerBindings_createCrunchySignerBindings
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     com_google_security_crunchy_jni_CrunchySignerBindings
 * Method:    destroyCrunchySignerBindings
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_google_security_crunchy_jni_CrunchySignerBindings_destroyCrunchySignerBindings
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_google_security_crunchy_jni_CrunchySignerBindings
 * Method:    sign
 * Signature: (J[B)[B
 */
JNIEXPORT jbyteArray JNICALL Java_com_google_security_crunchy_jni_CrunchySignerBindings_sign
  (JNIEnv *, jclass, jlong, jbyteArray);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class com_google_security_crunchy_jni_CrunchyVerifierBindings */

#ifndef _Included_com_google_security_crunchy_jni_CrunchyVerifierBindings
#define _Included_com_google_security_crunchy_jni_CrunchyVerifierBindings
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_google_security_crunchy_jni_CrunchyVerifierBindings
 * Method:    createCrunchyVerifierBindings
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_com_google_security_crunchy_jni_CrunchyVerifierBindings_createCrunchyVerifierBindings
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     com_google_security_crunchy_jni_CrunchyVerifierBindings
 * Method:    destroyCrunchyVerifierBindings
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_google_security_crunchy_jni_CrunchyVerifierBindings_destroyCrunchyVerifierBindings
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_google_security_crunchy_jni_CrunchyVerifierBindings
 * Method:    verify
 * Signature: (J[B[B)V
 */
JNIEXPORT void JNICALL Java_com_google_security_crunchy_jni_CrunchyVerifierBindings_verify
  (JNIEnv *, jclass, jlong, jbyteArray, jbyteArray);

#ifdef __cplusplus
}
#endif
#endif
